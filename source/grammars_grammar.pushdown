//////////////////////// Licensing ///////////////////////////////////////////////////////
//
//   Copyright 2019 @ Evandro Coan
//   Source Code Formatter Grammar's Grammar
//
//  Redistributions of source code must retain the above
//  copyright notice, this list of conditions and the
//  following disclaimer.
//
//  Redistributions in binary form must reproduce the above
//  copyright notice, this list of conditions and the following
//  disclaimer in the documentation and/or other materials
//  provided with the distribution.
//
//  Neither the name Evandro Coan nor the names of any
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  This program is free software; you can redistribute it and/or modify it
//  under the terms of the GNU General Public License as published by the
//  Free Software Foundation; either version 3 of the License, or ( at
//  your option ) any later version.
//
//  This program is distributed in the hope that it will be useful, but
//  WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
//  General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
//////////////////////////////////////////////////////////////////////////////////////////
//

language_syntax: _NEWLINE? preamble_statements _NEWLINE? language_construct_rules _NEWLINE? ( miscellaneous_language_rules _NEWLINE? )* _NEWLINE?

preamble_statements: ( ( target_language_name_statement | master_scope_name_statement | constant_definition ) _NEWLINE )+
language_construct_rules: "contexts" ": " indentation_block
miscellaneous_language_rules: /[^:\n]+/ ": " indentation_block

target_language_name_statement: "name" ": " free_input_string
master_scope_name_statement: "scope" ": " free_input_string

indentation_block: enter_block _NEWLINE ( statements_list _NEWLINE )+ leave_block
statements_list: match_statement | include_statement | push_statement | pop_statement
                | constant_definition | scope_name_statement | capturing_block | meta_scope_statement

enter_block: OPEN_BRACE
leave_block: CLOSE_BRACE
OPEN_BRACE: "{"
CLOSE_BRACE: "}"

push_statement:  "push" ": " indentation_block
include_statement: "include" ": " free_input_string
constant_definition: constant_name free_input_string
constant_name: CONSTANT_NAME_
CONSTANT_NAME_: /\$.+?\: /

free_input_string: ( constant_usage | text_chunk )* ( constant_usage_end | text_chunk_end )
constant_usage: CONSTANT_USAGE_
text_chunk: TEXT_CHUNK_
constant_usage_end: CONSTANT_USAGE_END_
text_chunk_end: TEXT_CHUNK_END_

CONSTANT_USAGE_: /\$[^\n\$\:]+\:/
TEXT_CHUNK_: /(?:\\{|\\}|\\\$|[^\n{}\$])+/
CONSTANT_USAGE_END_: /(?:\$[^\n\$\:]+\:)(?=(?:\n|$))/
TEXT_CHUNK_END_: /(?:\\{|\\}|\\\$|[^\n{}\$])+(?=(?:\n|$))/

braced_free_input_string: ( constant_usage | text_chunk )* ( braced_constant_usage_end | braced_text_chunk_end )
braced_constant_usage_end: BRACED_CONSTANT_USAGE_END_
braced_text_chunk_end: BRACED_TEXT_CHUNK_END_
BRACED_CONSTANT_USAGE_END_: /(?:\$[^\n\$\:]+\:)(?=(?: \u007b))/
BRACED_TEXT_CHUNK_END_: /(?:\\{|\\}|\\\$|[^\n{}\$])+(?=(?: \u007b))/

match_statement: "match" ": " braced_free_input_string "{" ( _NEWLINE statements_list )* _NEWLINE "}"
scope_name_statement: "scope" ": " free_input_string

capturing_block: "captures" ": " "{" ( _NEWLINE capturing_lines )+ _NEWLINE "}"
capturing_lines: INTEGER+ ": " free_input_string

pop_statement: "pop" ": " free_input_string
meta_scope_statement: "meta_scope" ": " free_input_string

// General terminal tokens
CR: "/r"
LF: "/n"
SPACES: /[\t \f]+/

SINGLE_LINE_COMMENT: /(?:\#|\/\/)[^\n]*/
MULTI_LINE_COMMENT: /\/\*(?:[\s\S]*?)\*\//

NEWLINE: (CR? LF)+
_NEWLINE: ( /\r?\n[\t ]*/ | SINGLE_LINE_COMMENT )+
INTEGER: "0".."9"

%ignore SPACES
%ignore MULTI_LINE_COMMENT
%ignore SINGLE_LINE_COMMENT

%declare _INDENT _DEDENT
// _INDENT: "  "
// _DEDENT: "  "

